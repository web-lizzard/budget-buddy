---
description: 
globs: *.py
alwaysApply: false
---
1. **Use Meaningful Names**: Choose descriptive variable, function, and class names.
2. **Follow PEP 8**: Adhere to the Python Enhancement Proposal 8 style guide for formatting.
3. **Use Docstrings**: Document functions and classes with docstrings to explain their purpose.
4. **Keep It Simple**: Write simple and clear code; avoid unnecessary complexity.
5. **Use List Comprehensions**: Prefer list comprehensions for creating lists over traditional loops when appropriate.
6. **Handle Exceptions**: Use try-except blocks to handle exceptions gracefully.
7. **Use Virtual Environments**: Isolate project dependencies using virtual environments (e.g., `venv`).
8. **Write Tests**: Implement unit tests to ensure code reliability. Write it to correspond module in `backend/tests/**`
9. **Use Type Hints**: Utilize type hints for better code clarity and type checking.
10. **Avoid Global Variables**: Limit the use of global variables to reduce side effects.
11. **Create Separete Files**: Always create a file for a new class function in correspond folder
12. **Public methods**: Always add public methods on the top of the class declaration
13. **Tests**: Use pytest.mark.paramtrerize for differentiate the test cases
14. **Run Tests Command**: Use make test command to run backend unit tests

