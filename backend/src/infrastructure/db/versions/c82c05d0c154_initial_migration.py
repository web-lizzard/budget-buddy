"""initial migration

Revision ID: c82c05d0c154
Revises:
Create Date: 2025-04-26 15:42:19.085256

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c82c05d0c154"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "budgets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("total_limit_amount", sa.Integer(), nullable=False),
        sa.Column("total_limit_currency", sa.String(length=3), nullable=False),
        sa.Column(
            "strategy_type",
            sa.Enum("monthly", "yearly", name="budget_strategy_type_enum"),
            nullable=False,
        ),
        sa.Column(
            "strategy_parameters",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("deactivation_date", sa.Date(), nullable=True),
        sa.Column("version", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_budgets_user_id"), "budgets", ["user_id"], unique=False)
    op.create_table(
        "categories",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("budget_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("limit_amount", sa.Integer(), nullable=False),
        sa.Column("limit_currency", sa.String(length=3), nullable=False),
        sa.Column("version", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["budget_id"], ["budgets.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_categories_budget_id"), "categories", ["budget_id"], unique=False
    )
    op.create_index(
        op.f("ix_categories_user_id"), "categories", ["user_id"], unique=False
    )
    op.create_table(
        "statistics_records",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("budget_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("current_balance_amount", sa.Integer(), nullable=False),
        sa.Column("current_balance_currency", sa.String(length=3), nullable=False),
        sa.Column("daily_available_amount_amount", sa.Integer(), nullable=False),
        sa.Column(
            "daily_available_amount_currency", sa.String(length=3), nullable=False
        ),
        sa.Column("daily_average_amount", sa.Integer(), nullable=False),
        sa.Column("daily_average_currency", sa.String(length=3), nullable=False),
        sa.Column("used_limit_amount", sa.Integer(), nullable=False),
        sa.Column("used_limit_currency", sa.String(length=3), nullable=False),
        sa.Column("creation_date", sa.Date(), nullable=False),
        sa.Column("version", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["budget_id"], ["budgets.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_statistics_records_budget_id"),
        "statistics_records",
        ["budget_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_statistics_records_user_id"),
        "statistics_records",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "category_statistics_records",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("statistics_record_id", sa.UUID(), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("current_balance_amount", sa.Integer(), nullable=False),
        sa.Column("current_balance_currency", sa.String(length=3), nullable=False),
        sa.Column("daily_available_amount_amount", sa.Integer(), nullable=False),
        sa.Column(
            "daily_available_amount_currency", sa.String(length=3), nullable=False
        ),
        sa.Column("daily_average_amount", sa.Integer(), nullable=False),
        sa.Column("daily_average_currency", sa.String(length=3), nullable=False),
        sa.Column("used_limit_amount", sa.Integer(), nullable=False),
        sa.Column("used_limit_currency", sa.String(length=3), nullable=False),
        sa.Column("version", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["category_id"], ["categories.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["statistics_record_id"], ["statistics_records.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_category_statistics_records_category_id"),
        "category_statistics_records",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_category_statistics_records_statistics_record_id"),
        "category_statistics_records",
        ["statistics_record_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_category_statistics_records_user_id"),
        "category_statistics_records",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("amount_amount", sa.Integer(), nullable=False),
        sa.Column("amount_currency", sa.String(length=3), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("EXPENSE", "INCOME", name="transaction_type_enum"),
            nullable=False,
        ),
        sa.Column("occurred_date", sa.Date(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("version", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transactions_category_id"),
        "transactions",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_occurred_date"),
        "transactions",
        ["occurred_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_user_id"), "transactions", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transactions_user_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_occurred_date"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_category_id"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(
        op.f("ix_category_statistics_records_user_id"),
        table_name="category_statistics_records",
    )
    op.drop_index(
        op.f("ix_category_statistics_records_statistics_record_id"),
        table_name="category_statistics_records",
    )
    op.drop_index(
        op.f("ix_category_statistics_records_category_id"),
        table_name="category_statistics_records",
    )
    op.drop_table("category_statistics_records")
    op.drop_index(
        op.f("ix_statistics_records_user_id"), table_name="statistics_records"
    )
    op.drop_index(
        op.f("ix_statistics_records_budget_id"), table_name="statistics_records"
    )
    op.drop_table("statistics_records")
    op.drop_index(op.f("ix_categories_user_id"), table_name="categories")
    op.drop_index(op.f("ix_categories_budget_id"), table_name="categories")
    op.drop_table("categories")
    op.drop_index(op.f("ix_budgets_user_id"), table_name="budgets")
    op.drop_table("budgets")
    # ### end Alembic commands ###
