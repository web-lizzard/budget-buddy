version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  subscriber:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: subscriber
    volumes:
      - ./backend/src:/app/src
    env_file:
      - .env
    depends_on:
      api:
        condition: service_started
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: unless-stopped

  celeryworker:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: celeryworker
    volumes:
      - ./backend/src:/app/src
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: flower
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq:
        condition: service_started
      celeryworker:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: budget_buddy
      POSTGRES_PASSWORD: budget_buddy
      POSTGRES_DB: budget_buddy
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U budget_buddy -d budget_buddy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres_data:
